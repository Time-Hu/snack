cabal-version:      2.2
name:               snack
version:            0.1.0.0
synopsis:           Lightweight framework for building command-line applications.
description:        Please see the README on Github at
                    <https://github.com/haskell-Z/snack#readme>
license:            BSD-3-Clause
license-file:       LICENSE
copyright:          Copyright (c) Judah Jacobson, Hu
author:             hu, Judah Jacobson
maintainer:         husj@emqx.io
tested-with:        GHC == 8.10.3, GHC == 8.8.4, GHC == 8.6.5
category:           User Interfaces
homepage:           https://github.com/haskell-Z/snack
bug-reports:        https://github.com/haskell-Z/snack/issues
build-type:         Simple
extra-source-files: README.md
                    ChangeLog.md

source-repository head
  type:     git
  location: https://github.com/haskell-Z/snack

-- There are three main advantages to the terminfo backend over the portable,
-- "dumb" alternative.  First, it enables more efficient control sequences
-- when redrawing the input.  Second, and more importantly, it enables us
-- to draw on multiple lines, so we can wrap long input strings.  And third,
-- the backend adds some extra key sequences such as forwards delete.
--
-- (The "dumb" terminal also allows editing of long input strings, but is
-- restricted to only one line and thus only shows part of the input at once.)

flag brick
    Description: Build the Brick widget
    Default: False
    Manual: True

Library
    -- We require ghc>=7.4.1 (base>=4.5) to use the base library encodings, even
    -- though it was implemented in earlier releases, due to GHC bug #5436 which
    -- wasn't fixed until 7.4.1
    hs-source-dirs: src

    Build-depends: base >=4.9 && < 4.17, containers>=0.4 && < 0.7,
                   brick >= 0.17, vty >= 5.15, split >= 0.2, haskeline,
                   text-zipper
    Default-Language: Haskell98
    Default-Extensions:
                ForeignFunctionInterface, Rank2Types, FlexibleInstances,
                TypeSynonymInstances
                FlexibleContexts, ExistentialQuantification
                ScopedTypeVariables, GeneralizedNewtypeDeriving
                StandaloneDeriving
                MultiParamTypeClasses,
                UndecidableInstances
                ScopedTypeVariables, CPP, DeriveDataTypeable,
                PatternGuards
    Exposed-Modules:
                Snack
    Other-Modules:
                Snack.Completion
                Snack.Editor
                Snack.Main
    include-dirs: includes

    ghc-options: -Wall
